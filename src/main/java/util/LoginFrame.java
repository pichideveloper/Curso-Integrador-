/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package util;

import enlaces.UsuarioCC;
import util.Sesion;
import GUIEntrada.Menu;  
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author frixi
 */
public class LoginFrame extends javax.swing.JFrame {
    private JTextField txtUsuario;
    private JPasswordField txtContrase√±a;
    private JLabel lblSugerencia;
    private JButton btnTogglePassword;
    private boolean passwordVisible = false;
    private int intentosFallidos = 0;
    private static final int MAX_INTENTOS = 3;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(LoginFrame.class.getName());

       
    public LoginFrame() {
        super("Login - Club Dema");
        initUI();
        setSize(450, 350);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            //logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new LoginFrame().setVisible(true));
    }


private void initUI() {
        Color primaryColor = new Color(41, 128, 185);
        Color backgroundColor = new Color(245, 245, 245);
        
        getContentPane().setBackground(backgroundColor);
        setLayout(new BorderLayout());

        JLabel title = new JLabel("Iniciar Sesion", SwingConstants.CENTER);
        title.setFont(new Font("SansSerif", Font.BOLD, 28));
        title.setForeground(primaryColor);
        title.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createMatteBorder(0, 0, 2, 0, primaryColor),
            BorderFactory.createEmptyBorder(20, 0, 20, 0)
        ));
        add(title, BorderLayout.NORTH);

        JPanel panel = new JPanel(new GridBagLayout());
        panel.setBackground(backgroundColor);
        panel.setBorder(BorderFactory.createEmptyBorder(20, 40, 20, 40));
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(12, 12, 12, 12);
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        gbc.gridx = 0; gbc.gridy = 0;
        JLabel lblUsuario = new JLabel("Usuario:");
        lblUsuario.setFont(new Font("SansSerif", Font.BOLD, 14));
        panel.add(lblUsuario, gbc);
        
        gbc.gridx = 1;
        txtUsuario = new JTextField(15);
        txtUsuario.setFont(new Font("SansSerif", Font.PLAIN, 14));
        txtUsuario.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(Color.GRAY),
            BorderFactory.createEmptyBorder(5, 8, 5, 8)
        ));
        panel.add(txtUsuario, gbc);

        
        gbc.gridx = 0; gbc.gridy = 1;
        JLabel lblContrase√±a = new JLabel("Contrase√±a:");
        lblContrase√±a.setFont(new Font("SansSerif", Font.BOLD, 14));
        panel.add(lblContrase√±a, gbc);
        
        gbc.gridx = 1;
        
        JPanel passwordPanel = new JPanel(new BorderLayout());
        passwordPanel.setBackground(backgroundColor);
        
        txtContrase√±a = new JPasswordField(15);
        txtContrase√±a.setFont(new Font("SansSerif", Font.PLAIN, 14));
        txtContrase√±a.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(Color.GRAY),
            BorderFactory.createEmptyBorder(5, 8, 5, 8)
        ));
        passwordPanel.add(txtContrase√±a, BorderLayout.CENTER);
        
        btnTogglePassword = new JButton("üëÅ");
        btnTogglePassword.setFont(new Font("SansSerif", Font.PLAIN, 12));
        btnTogglePassword.setMargin(new Insets(2, 5, 2, 5));
        btnTogglePassword.setBackground(Color.WHITE);
        btnTogglePassword.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        btnTogglePassword.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnTogglePassword.setToolTipText("Mostrar/ocultar contrase√±a");
        
        btnTogglePassword.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                togglePasswordVisibility();
            }
        });
        
        passwordPanel.add(btnTogglePassword, BorderLayout.EAST);
        panel.add(passwordPanel, gbc);

        gbc.gridx = 0; gbc.gridy = 3; 
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        gbc.fill = GridBagConstraints.NONE;
        
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(backgroundColor);
        
        JButton btnIngresar = new JButton("Ingresar");
        btnIngresar.setFont(new Font("SansSerif", Font.BOLD, 16));
        btnIngresar.setBackground(primaryColor);
        btnIngresar.setForeground(Color.WHITE);
        btnIngresar.setFocusPainted(false);
        btnIngresar.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(primaryColor.darker()),
            BorderFactory.createEmptyBorder(10, 25, 10, 25)
        ));
        btnIngresar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        btnIngresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnIngresar.setBackground(primaryColor.darker());
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnIngresar.setBackground(primaryColor);
            }
        });
        
        btnIngresar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                validarLogin();
            }
        });
        
        buttonPanel.add(btnIngresar);
        panel.add(buttonPanel, gbc);

        add(panel, BorderLayout.CENTER);
    }


private void togglePasswordVisibility() {
        if (passwordVisible) {
            
            txtContrase√±a.setEchoChar('‚Ä¢');
            btnTogglePassword.setText("üëÅ");
            btnTogglePassword.setToolTipText("Mostrar contrase√±a");
        } else {
            txtContrase√±a.setEchoChar((char)0);
            btnTogglePassword.setText("üëÅ‚Äçüó®");
            btnTogglePassword.setToolTipText("Ocultar contrase√±a");
        }
        passwordVisible = !passwordVisible;
    }


private String getSugerenciaRol() {
        Date ahora = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        String hora = sdf.format(ahora);
        int h = Integer.parseInt(hora.split(":")[0]);

        if (h >= 6 && h < 14) return "Ma√±ana: Prueba 'secre_manana' / 1234";
        else if (h >= 14 && h < 20) return "Tarde: Prueba 'secre_tarde' / 1234";
        else return "Noche: Prueba 'secre_noche' / 1234";
    }

    private void validarLogin() {
        String usuario = txtUsuario.getText().trim();
        String contrase√±a = new String(txtContrase√±a.getPassword()).trim();

        if (usuario.isEmpty() || contrase√±a.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingresa usuario y contrase√±a.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        UsuarioCC usuarioDAO = new UsuarioCC();
        String rol = usuarioDAO.validarUsuario(usuario, contrase√±a);

        if (rol != null) {
            Sesion.setSesion(usuario, rol);
            JOptionPane.showMessageDialog(this, "¬°Bienvenido, " + rol + "!", "√âxito", JOptionPane.INFORMATION_MESSAGE);
            new Menu().setVisible(true);
            dispose();
        } else {
            intentosFallidos++;
            JOptionPane.showMessageDialog(this, 
                "Usuario o contrase√±a incorrectos. Intentos restantes: " + (MAX_INTENTOS - intentosFallidos), 
                "Error", JOptionPane.ERROR_MESSAGE);
            if (intentosFallidos >= MAX_INTENTOS) {
                JOptionPane.showMessageDialog(this, "Demasiados intentos. Cerrando app.", "Bloqueado", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        }
    }


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
